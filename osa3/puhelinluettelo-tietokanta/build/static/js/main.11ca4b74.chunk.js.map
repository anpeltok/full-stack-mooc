{"version":3,"sources":["components/Filter.js","components/AddNewEntry.js","components/Entry.js","components/Numbers.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","filter","handleFilter","setFilter","value","onChange","onClick","AddNewEntry","props","newName","handleNameChange","newNumber","handleNumberChange","handleNewData","type","Entry","person","handleDelete","name","number","id","Numbers","persons","toLowerCase","includes","map","key","Notification","message","className","baseUrl","axios","get","then","response","data","newPerson","post","delete","put","App","useState","setPersons","setNewName","setNewNumber","notificationMessage","setNotificationMessage","notificationType","setNotificationType","useEffect","personsService","initialPersons","changeMessage","setTimeout","event","target","preventDefault","find","contact","window","confirm","returnedPerson","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11ca4b74.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({filter, handleFilter, setFilter}) => {\r\n  return(\r\n    <div>\r\n      filter results: <input value={filter} onChange={handleFilter} />\r\n      <button onClick={() => setFilter('')}>Reset filter</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react';\r\n\r\nconst AddNewEntry = (props) => {\r\n  return(\r\n    <form>\r\n      <div>\r\n        name: <input value={props.newName} onChange={props.handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button onClick={props.handleNewData} type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddNewEntry\r\n","import React from 'react';\r\n\r\nconst Entry = ({person, handleDelete}) => {\r\n\r\n  return(\r\n    <div>\r\n      {person.name} {person.number} <button onClick={() => handleDelete(person.id)}>delete</button>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Entry;\r\n","import React from 'react'\r\nimport Entry from './Entry'\r\n\r\nconst Numbers = ({persons, filter, handleDelete}) => {\r\n\r\n  return(\r\n    <div>\r\n      {persons\r\n        .filter(person =>\r\n          person.name.toLowerCase().includes(filter.toLowerCase())\r\n          || person.number.includes(filter))\r\n        .map(person =>\r\n          <Entry key={person.name} person={person} handleDelete={handleDelete} />\r\n          )\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Numbers\r\n","import React from 'react'\r\n\r\nconst Notification = ({type, message}) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return(\r\n    <div className={type}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\nconst baseUrl = './api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios\r\n    .get(baseUrl)\r\n    .then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n  return axios\r\n    .post(baseUrl, newPerson)\r\n    .then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  axios\r\n    .delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n  return axios\r\n    .put(`${baseUrl}/${id}`, newPerson)\r\n    .then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, remove, update}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport AddNewEntry from './components/AddNewEntry'\r\nimport Numbers from './components/Numbers'\r\nimport Notification from './components/Notification'\r\nimport personsService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filter, setFilter] = useState('')\r\n  const [notificationMessage, setNotificationMessage] = useState(null)\r\n  const [notificationType, setNotificationType] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personsService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n  }, [])\r\n\r\n  const changeMessage = (type, message) => {\r\n    setNotificationMessage(message)\r\n    setNotificationType(type)\r\n    setTimeout(() => {\r\n      setNotificationMessage(null)\r\n      setNotificationType(null)\r\n    }, 5000)\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilter = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const handleNewData = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Updating data\r\n    if(persons.find(person => person.name === newName)){\r\n      const contact = persons.find(person => person.name === newName)\r\n\r\n      if(window.confirm(`${newName} already in contacts, replace the saved number with the new one?`)){\r\n        personsService\r\n          .update(contact.id, {name: newName, number: newNumber})\r\n          .then(returnedPerson => {\r\n            setPersons(persons.map(person => contact.id !== person.id ? person : returnedPerson))\r\n            changeMessage('success', `Updated ${newName}`)\r\n          })\r\n          .catch(error => changeMessage('error', `${error.response.data.error}`))\r\n      }\r\n    }\r\n\r\n    // Adding new data\r\n    else{\r\n      personsService\r\n        .create({name: newName, number: newNumber})\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          changeMessage('success', `Added ${newName}`)\r\n        })\r\n        .catch(error => changeMessage('error', `${error.response.data.error}`))\r\n    }\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const handleDelete = (id) => {\r\n    if(window.confirm('Are you sure you want to remove the contact?')){\r\n      personsService.remove(id)\r\n      changeMessage('success', `Removed ${persons.find(person => person.id === id).name}`)\r\n      setPersons(persons.filter(person => person.id !== id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification type={notificationType} message={notificationMessage}/>\r\n      <Filter filter={filter} setFilter={setFilter} handleFilter={handleFilter} />\r\n      <h3>Add new contact</h3>\r\n      <AddNewEntry\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        handleNameChange={handleNameChange}\r\n        handleNumberChange={handleNumberChange}\r\n        handleNewData={handleNewData} />\r\n      <h3>Contacts</h3>\r\n      <Numbers persons={persons} filter={filter} handleDelete={handleDelete} />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}